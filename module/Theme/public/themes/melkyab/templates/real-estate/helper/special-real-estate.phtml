<?
use \RealEstate\Model\RealEstateTable;

?>
<div id="special-estate-slider-<?= $this->blockId ?>" class="content-slider-container">
        <span class="prev" title="<?= t('Previous') ?>">
        </span>

    <div class="viewport">
        <ul class="wrapper">
            <?
            foreach ($this->specialEstate as $row) {
                ?>
                <li class="item special-estate-item">
                    <?
                    $reg_type_class = strtolower(str_replace(' ', '-', RealEstateTable::$estateRegType[$row->regType]));
                    $reg_type = $this->translate(RealEstateTable::$estateRegType[$row->regType]);
                    $estate_type = $row->estateTypeName;
                    $meter = $row->estateArea . ' ' . $this->translate('real_estate_Meter');
                    $title = \Application\API\App::prepareUrlString($reg_type . ' ' . $estate_type . ' ' . $meter);
                    $price = 0;

                    switch ($row->regType) {
                        case 1:
                        case 3:
                        case 4:
                            $price = '<span class="price">' . $this->currencyFormat($row->totalPrice) . '</span>';
                            break;
                        case 2:
                            $price = '<span class="mortgage">&nbsp;' . $this->translate('mortgage') .
                                '&nbsp;</span>&nbsp;<span class="price">' . $this->currencyFormat($row->mortgagePrice) . '</span>&nbsp;' .
                                $this->translate('and') . '&nbsp;<span class="rental">&nbsp;' . $this->translate('rental') .
                                '&nbsp;</span>&nbsp;<span class="price">' . $this->currencyFormat($row->rentalPrice) . '</span>';
                            break;
                    }
                    /*if (!empty($row->fPath)) {
                        $image = explode(',', $row->fPath);
                        $imageUrl = getThumbnail()->resize($image[0], 80, 80); //resize image
                    } else
                        $imageUrl = getThumbnail()->resize($this->basePath() . '/images/not-image.png', 80, 80); //resize image;*/
                    ?>

                    <a href="<?= $this->url('app/real-estate/view', array('id' => $row->itemId, 'title' => $title)) ?>">
                        <!--<img src="<?/*= $imageUrl */?>">-->
                        <h2>
                            <span class="reg-type reg-type-<?= $reg_type_class ?>"><?= $reg_type ?></span>
                            <span class="estate-type"><?= $estate_type ?></span>
                        </h2>

                        <p>
                            <?if ($row->estateArea) {
                            ?>

                        <div>
                            <span class="view-img-others"></span>
                                <span class="estate-area">
                                        <?= $meter ?></span>
                            <sup class="super">(<?= $this->translate('real_estate_M') ?>)</sup>
                        </div>
                        <? } ?>
                        <div>
                            <span class="view-img-others"></span>
                            <?= $price ?>
                        </div>

                        <div>
                            <span class="view-img-others"></span>
                        <span class="location">
                                <?= $row->stateTitle . ' ' . t('City') . ' ' . $row->cityTitle ?></span>
                        </div>
                        </p>
                    </a>
                </li>
            <?
            }
            ?>
        </ul>
    </div>
        <span class="next" title="<?= t('Next') ?>">
        </span>
</div>
<script type="text/javascript">
    <?$this->inlineScript()->captureStart()?>
    $(document).ready(function () {
        $('#special-estate-slider-<?=$this->blockId?>').contentSlider({
            orientation: '<?=$this->orientation?>',
            direction: '<?=$this->direction?>',
            autoscroll: '<?=$this->autoScroll?>',
            interval: <?=$this->interval?>,
            speed: <?=$this->speed?>
        });
        <!--            visible_items: -->
        <?//=(int)$this->visibleCount?><!--,-->
        <!--            scrolling_items: -->
        <?//=(int)$this->scrollingItems?><!--,-->
        <!--            orientation: "-->
        <?//=$this->type?><!--",-->
        <!--            circular: "yes",-->
        <!--            autoscroll: "-->
        <?//=$this->autoScroll?><!--",-->
        <!--            direction: '-->
        <?//=$this->direction?><!--',-->
        <!--            start_from: 1,-->
        <!--            interval: 6000-->
        <!--        });-->
    });
    <?$this->inlineScript()->captureEnd()?>
</script>